# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - '*'
    exclude:
    - gh-pages

pr:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

steps:

- script: |
    git config --global core.autocrlf false
    git config --global core.eol lf
  displayName: Configure LF for Windows

- checkout: self

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
    checkLatest: true
  displayName: 'Install Node.js'

# Don't use latest yarn 1.19 â€” Azure DevOps run into https://github.com/yarnpkg/yarn/issues/7584
- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@3
  displayName: 'Use Yarn 1.17.3'
  inputs:
    versionSpec: 1.17.3

# Restore .vscode-test cache
- task: Cache@2
  # For some reason retrieving 250MB cache on macOS takes 7 minutes
  condition: ne(variables['Agent.OS'], 'Darwin')
  inputs:
    key: vscode-test | $(Agent.OS)
    path: .vscode-test
  displayName: Restore .vscode-test cache

- task: Cache@2
  inputs:
    key: 'yarn | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
       yarn | "$(Agent.OS)"
    path: $(YARN_CACHE_FOLDER)
  displayName: Restore yarn cache

- bash: yarn --frozen-lockfile
  displayName: Install Dependencies
- bash: yarn compile
  displayName: Compile

- bash: |
    set -e
    /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
    disown -ar
    echo "Started xvfb"
  condition: eq(variables['Agent.OS'], 'Linux')
  displayName: Start xvfb

- bash: yarn test:server
  displayName: Run Server Tests
  condition: always()
  env:
    DISPLAY: :10

- bash: yarn test:grammar
  displayName: Run grammar E2E Tests
  condition: always()
  env:
    DISPLAY: :10

- bash: yarn test:lsp
  displayName: Run LSP E2E Tests
  condition: always()
  env:
    DISPLAY: :10

- bash: yarn test:vue3
  displayName: Run vue3 E2E Tests
  condition: always()
  env:
    DISPLAY: :10

- bash: yarn test:int
  displayName: Run template interpolation E2E Tests
  condition: always()
  env:
    DISPLAY: :10
